import { PrismaClient } from "@prisma/client";
import { randomUUID } from "crypto";

const prisma = new PrismaClient();

async function main() {
  console.log("üå± Seeding database for OSSD#13...");

  // 1Ô∏è‚É£ Create Admin User (Organizer)
  const admin = await prisma.user.upsert({
    where: { email: "admin@ossd13.com" },
    update: {},
    create: {
      firstName: "Admin",
      lastName: "OSSD",
      email: "admin@ossd13.com",
      avatar: "https://via.placeholder.com/150",
    },
  });

  // 2Ô∏è‚É£ Create Event for OSSD#13
  const event = await prisma.event.create({
    data: {
      name: "OSSD#13",
      description: "‡∏á‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏¢ OSSD ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà 13",
      userId: admin.id,
    },
  });

  // 3Ô∏è‚É£ Create Polls (Best Presentation & Popular Vote)
  const bestPresentationPoll = await prisma.poll.create({
    data: {
      question: "‡∏ó‡∏µ‡∏°‡πÑ‡∏´‡∏ô‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏™‡∏ô‡∏≠‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î?",
      description: "‡πÇ‡∏´‡∏ß‡∏ï Best Presentation ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö OSSD#13",
      isPublic: true,
      startVoteAt: new Date(),
      endVoteAt: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000), // ‡πÇ‡∏´‡∏ß‡∏ï‡πÑ‡∏î‡πâ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 2 ‡∏ß‡∏±‡∏ô
      isVoteEnd: false,
      eventId: event.id,
      userId: admin.id,
    },
  });

  const popularVotePoll = await prisma.poll.create({
    data: {
      question: "‡∏ó‡∏µ‡∏°‡πÑ‡∏´‡∏ô‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏¥‡∏¢‡∏°‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î?",
      description: "‡πÇ‡∏´‡∏ß‡∏ï Popular Vote ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö OSSD#13",
      isPublic: true,
      startVoteAt: new Date(),
      endVoteAt: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000),
      isVoteEnd: false,
      eventId: event.id,
      userId: admin.id,
    },
  });

  // 4Ô∏è‚É£ Add Options for Each Poll (‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• names)
  const clusters = [
    { id: 0, cluster: "Cluster 0", company: "Clicknext Bangsean", color1: "#002449", color2: "#868990", img: "/src/assets/images/logo_cluster/logo-cluster-0.png" },
    { id: 1, cluster: "Cluster 1", company: "‡∏ô‡∏≤‡∏á‡∏ü‡πâ‡∏≤‡∏ö‡∏≤‡∏á‡πÅ‡∏™‡∏ô", color1: "#360305", color2: "#F6AC1E", img: "/src/assets/images/logo_cluster/logo-cluster-1.png" },
    { id: 2, cluster: "Cluster 2", company: "TTT Brother", color1: "#000000", color2: "#FFFFFF", img: "/src/assets/images/logo_cluster/logo-cluster-2.png" },
    { id: 3, cluster: "Cluster 3", company: "Clicknext Bangkok", color1: "#2F275F", color2: "#2D3087", img: "/src/assets/images/logo_cluster/logo-cluster-3.png" },
    { id: 4, cluster: "Cluster 4", company: "IV Soft", color1: "#939599", color2: "#EFAB00", img: "/src/assets/images/logo_cluster/logo-cluster-4.png" },
    { id: 5, cluster: "Cluster 5", company: "TTT Brother", color1: "#5B8CDD", color2: "#BD73BF", img: "/src/assets/images/logo_cluster/logo-cluster-5.png" },
    { id: 6, cluster: "Cluster 6", company: "Clicknext Bangkok", color1: "#6996B7", color2: "#E00024", img: "/src/assets/images/logo_cluster/logo-cluster-6.png" },
    { id: 7, cluster: "Cluster 7", company: "‡∏ô‡∏≤‡∏á‡∏ü‡πâ‡∏≤‡∏ö‡∏≤‡∏á‡πÅ‡∏™‡∏ô", color1: "#000000", color2: "#017F8D", img: "/src/assets/images/logo_cluster/logo-cluster-7.png" },
    { id: 8, cluster: "Cluster 8", company: "IV Soft", color1: "#000000", color2: "#D72027", img: "/src/assets/images/logo_cluster/logo-cluster-8.png" },
    { id: 9, cluster: "Cluster 9", company: "Clicknext Bangsean", color1: "#232323", color2: "#FFFFFF", img: "/src/assets/images/logo_cluster/logo-cluster-9.png" },
  ];

  for (const cluster of clusters) {
    await prisma.option.createMany({
      data: [
        {
          text: `${cluster.cluster} - ${cluster.company}`,
          banner: cluster.img,
          pollId: bestPresentationPoll.id,
        },
        {
          text: `${cluster.cluster} - ${cluster.company}`,
          banner: cluster.img,
          pollId: popularVotePoll.id,
        },
      ],
    });
  }

  // 5Ô∏è‚É£ Create Guests (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏ß‡∏ï)
  const guestCount = 10; // ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Guest ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á
  for (let i = 0; i < guestCount; i++) {
    await prisma.guest.create({
      data: {
        name: `Guest-${i + 1}`,
        key: randomUUID(), // ‡πÉ‡∏ä‡πâ UUID ‡πÄ‡∏õ‡πá‡∏ô Key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Guest
        eventId: event.id,
      },
    });
  }

  console.log("‚úÖ Seeding complete for OSSD#13!");
}

main()
  .catch((e) => {
    console.error("‚ùå Error seeding database:", e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
